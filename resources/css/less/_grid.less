//******** Grid ********//


// Columns

.tp-column, .tp-columns {
  position: relative;
  padding-left: 0.9375rem;
  padding-right: 0.9375rem;

  @media only screen and (min-width: @medium-screen-min) {
    float: left;
    min-height: 1px;
  }
}

.tp-width-main,
.tp-width-secondary {
  .make-xs-column(12);
}

.tp-width-sidebar {
  .make-xs-column(12);
}

.tp-width-half {
  .make-xs-column(12);
  .make-md-column(6);
  .make-lg-column(6);
}

.large-4 {
  @media only screen and (min-width: @large-screen-min) {
    width: 25%;
  }
}

.large-6 {
  @media only screen and (min-width: @large-screen-min) {
    width: 50%;
  }
}

.large-8 {
  @media only screen and (min-width: @large-screen-min) {
    width: 75%;
  }
}

.medium-6 {
  @media only screen and (min-width: @medium-screen-min) {
    width: 50%;
  }
}

.small-12 {
  width: 100%;
}

// For elements/columns in a 12-column grid,
// each column consumes a fourth (25%) of the available width beginning with medium sized screens
// 50% of the width beginning with small screens, so elements will group in 2 rows
// below that width simply full width
// Important: Columns with class "tp-column-3" need to be wrapped in class "tp-row" to get the side margins, as they are removed in this class!
.tp-column-3 {
  .make-xs-column(6);
  .make-md-column(3);
  padding: 0;
}

.tp-column-4 {
  &:extend(.large-4);
  &:extend(.medium-6);
  &:extend(.tp-column);
}

.tp-column-6 {
  @media only screen and (min-width: @medium-screen-min) {
    width: 50%;
    float: right;
  }
}

.tp-column-fullwidth {
  &:extend(.small-12);
  &:extend(.tp-columns);
  &:extend(.tp-column);
}

// Rows

.tp-row {
  width: 100%;
  margin-left: auto;
  margin-right: auto;
  margin-top: 1rem;
  margin-bottom: 1rem;
  max-width: 62.5rem;
  @media only screen and (min-width: @medium-screen-min) {
    margin-top: 0;
    margin-bottom: 0;
  }
}

.tp-row:before, .tp-row:after {
  content: " ";
  display: table;
  clear: both;
}
